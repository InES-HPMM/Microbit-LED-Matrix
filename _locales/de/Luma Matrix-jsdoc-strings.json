{
    "lumaMatrix.clearIcon": "Lösche icon",
    "lumaMatrix.clearIcon|param|icon": "ist die Nummer des Icons [0..3]. Andere Werte löschen alle Icons",
    "lumaMatrix.initializeMatrixInterfaceExpert": "Diese Funktion initialisiert die Matrix mit den angegebenen Pins für joystick und den Schalter.",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinCenterButtonTemp": "ist der GPIO-Pin für den Mittelknopf des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinDownButtonTemp": "ist der GPIO-Pin für den Knopf nach unten des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinLeftButtonTemp": "ist der GPIO-Pin für den Knopf nach links des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinRightButtonTemp": "ist der GPIO-Pin für den Knopf nach rechts des Joysticks",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinSwitchTemp": "ist der GPIO-Pin für den Schalter",
    "lumaMatrix.initializeMatrixInterfaceExpert|param|pinUpButtonTemp": "ist der GPIO-Pin für den Knopf nach oben des Joysticks",
    "lumaMatrix.setCurrentTimeStr": "Setze interne Uhrzeit auf die angegebene Zeit",
    "lumaMatrix.setCurrentTimeStr|param|timestring": "im Format \"hh:mm:ss\"",
    "lumaMatrix.setIconColor": "Setze die Farbe des angegebenen Icons",
    "lumaMatrix.setIconColor|param|icon": "ist die Nummer des Icons [0..3]. Andere Werte setzen die Farbe aller Icons",
    "lumaMatrix.setJoystickTimeEnable": "Aktiviert oder deaktiviert die Joystick-Zeitsteuerung. Rauf/Runter ändert die Stunden, Links/Rechts ändert die Minuten",
    "lumaMatrix.setJoystickTimeEnable|param|state": "ist true, um die Joystick-Zeitsteuerung zu aktivieren",
    "lumaMatrix.getCurrentTime": "Lese die aktuelle Zeit, bei Fehler 0.",
    "lumaMatrix.getCurrentTimeAsText": "Lese die aktuelle Zeit als String \"hh:mm:ss\".",
    "lumaMatrix.setCurrentTime": "Setze interne Zeit auf neuen Wert",
    "lumaMatrix.setCurrentTime|param|hours": "Zahl von 0 bis 23",
    "lumaMatrix.setCurrentTime|param|minutes": "Zahl von 0 bis 59",
    "lumaMatrix.setCurrentTime|param|seconds": "Zahl von 0 bis 59",
    "lumaMatrix.applyPixelBuffer": "Schreibe einen Buffer voller Farben auf die Matrix. Farben müssen in 3 aufeinanderfolgenden Bytes in der Reihenfolge Rot, Grün, Blau aufgeteilt sein.",
    "lumaMatrix.clear": "Clear the pixels of the Luma Matrix",
    "lumaMatrix.compareJoystick": "Compare Luma Matrix joystick position",
    "lumaMatrix.createWordClock": "Initialize Word Clock with given colours. Time will be tracked and pixels on the matrix updated in background.\r\nOptional joystick enable allows to \"scroll\" through internal time if turned on. This can be changed during runtime.",
    "lumaMatrix.debugEnable": "Enable serial messages for debugging printed by the Luma Matrix extension.",
    "lumaMatrix.eColorPalette": "Enum with predefined colours to reduce packet size over radio",
    "lumaMatrix.eDataType": "Enum with predefined datatypes in messages sent over radio",
    "lumaMatrix.getColorFromPixel": "Get the colour of the pixel at coordinate (x,y)",
    "lumaMatrix.getColorPalette": "Get element from enum with predefined colours to reduce packet size over radio",
    "lumaMatrix.getDataType": "Get element from enum with predefined datatypes in messages sent over radio",
    "lumaMatrix.getJoystickDirectionEnum": "Select direction from joystick enum",
    "lumaMatrix.getMatrixImage": "Get a representation of which pixels are turned on. Only bitmap is available without colour information.",
    "lumaMatrix.getPixelBuffer": "Get the buffer with stored colours for each pixel. Each pixel uses 3 bytes in order red, green, blue.",
    "lumaMatrix.initializeMatrix": "Initialize the 8 by 8 Neopixel Matrix with a joystick. \r\nThis block needs to be execute only once at the start.",
    "lumaMatrix.isSwitchSet": "Compare Luma Matrix switch position",
    "lumaMatrix.joystickChangedThread": "Creates thread to poll joystick direction and execute callback when direction changes. \r\nThe draggable parameter \"direction\" holds the value which triggered the call",
    "lumaMatrix.matrix8x8": "8 by 8 matrix bitmap",
    "lumaMatrix.movingImage": "Let text scroll across the matrix, letter by letter from right to the left.",
    "lumaMatrix.onReceivedMatrix": "Listen on incomming radio messages from other Luma Matrix. Radio channel needs to be set in advance",
    "lumaMatrix.parseBufferForColor": "Parse received message for colour",
    "lumaMatrix.parseColorImage": "Parse received message for coloured image",
    "lumaMatrix.parseImage": "Parse received message for image",
    "lumaMatrix.readJoystick": "Read Luma Matrix joystick position",
    "lumaMatrix.readJoystickText": "Read Luma Matrix joystick position as text",
    "lumaMatrix.readSwitch": "Read Luma Matrix switch position",
    "lumaMatrix.rgbToColor": "Combine colour channels into a 24 bit colour number",
    "lumaMatrix.scrollText": "Let text scroll across the Luma Matrix pixels.",
    "lumaMatrix.sendImageWithColor": "Send bitmap in single colour to other Luma Matrix over radio. Radio channel needs to be set in advance",
    "lumaMatrix.sendPixelBuffer": "Send compressed pixel buffer in colors of pallette to other Luma Matrix over radio. Radio channel needs to be set in advance",
    "lumaMatrix.setBrightness": "Set the brightness of the pixels inside range from 0 to 255.",
    "lumaMatrix.setOnePixel": "Setze die Farbe eines Pixels an einer Koordinate auf einen 24-Bit-Farbwert.",
    "lumaMatrix.setOnePixelRGB": "Setze die Farbe eines Pixels an einer Koordinate auf die Farbkanäle.",
    "lumaMatrix.setWordColors": "Setze die Farben der Wörter auf neue Werte.",
    "lumaMatrix.showImage": "Schreibe eine Bitmap von Pixeln in einer definierten Farbe auf die Matrix.\r\nDie Schicht ist standardmäßig aktiv und löscht nicht gesetzte Pixel nicht.",
    "lumaMatrix.snake": "Vollständig implementiertes Snake-Spiel mit Joystick-Steuerung.\r\nSetze diesen Block nur einmal am Anfang.",
    "lumaMatrix.switchValueChangedThread": "Erstellt einen Thread, um den Schalterzustand abzufragen und eine Callback-Funktion auszuführen, wenn sich der Zustand ändert.",
    "lumaMatrix.testLedMatrixHW": "Definierte Testsequenz, die jeden Aspekt der Hardware überprüft."
}